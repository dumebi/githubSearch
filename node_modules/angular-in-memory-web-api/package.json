{
  "_args": [
    [
      {
        "raw": "angular-in-memory-web-api@https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
        "scope": null,
        "escapedName": "angular-in-memory-web-api",
        "name": "angular-in-memory-web-api",
        "rawSpec": "https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
        "spec": "https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
        "type": "remote"
      },
      "/Applications/Node/githubSearch"
    ]
  ],
  "_from": "angular-in-memory-web-api@>=0.2.2 <0.3.0",
  "_id": "angular-in-memory-web-api@0.2.2",
  "_inCache": true,
  "_location": "/angular-in-memory-web-api",
  "_phantomChildren": {},
  "_requested": {
    "raw": "angular-in-memory-web-api@https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
    "scope": null,
    "escapedName": "angular-in-memory-web-api",
    "name": "angular-in-memory-web-api",
    "rawSpec": "https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
    "spec": "https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
  "_shasum": "c57a683cd2acfa6000bd1ac04b3c7be04c5966ce",
  "_shrinkwrap": null,
  "_spec": "angular-in-memory-web-api@https://registry.npmjs.org/angular-in-memory-web-api/-/angular-in-memory-web-api-0.2.2.tgz",
  "_where": "/Applications/Node/githubSearch",
  "author": "",
  "bugs": {
    "url": "https://github.com/angular/in-memory-web-api/issues"
  },
  "dependencies": {},
  "description": "An in-memory web api for Angular demos and tests",
  "devDependencies": {
    "@angular/common": "~2.4.0",
    "@angular/compiler": "~2.4.0",
    "@angular/compiler-cli": "~2.4.0",
    "@angular/core": "~2.4.0",
    "@angular/http": "~2.4.0",
    "@angular/platform-browser": "~2.4.0",
    "@angular/platform-server": "~2.4.0",
    "@types/jasmine": "^2.5.36",
    "@types/node": "^6.0.46",
    "canonical-path": "0.0.2",
    "concurrently": "^3.0.0",
    "core-js": "^2.4.1",
    "del": "^2.2.2",
    "gulp": "^3.9.1",
    "gulp-bump": "^2.4.0",
    "gulp-load-plugins": "^1.3.0",
    "gulp-task-listing": "^1.0.1",
    "gulp-util": "^3.0.7",
    "http-server": "^0.9.0",
    "jasmine-core": "~2.5.2",
    "karma": "^1.3.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-cli": "^1.0.1",
    "karma-htmlfile-reporter": "^0.3.4",
    "karma-jasmine": "^1.0.2",
    "karma-jasmine-html-reporter": "^0.2.2",
    "lite-server": "^2.2.2",
    "lodash": "^4.16.2",
    "reflect-metadata": "^0.1.3",
    "rimraf": "^2.5.4",
    "rollup": "^0.36.0",
    "rollup-stream": "^1.14.0",
    "rxjs": "5.0.1",
    "tslint": "^3.15.1",
    "typescript": "~2.0.10",
    "vinyl-source-stream": "^1.1.0",
    "yargs": "^5.0.0",
    "zone.js": "^0.7.2"
  },
  "homepage": "https://github.com/angular/in-memory-web-api#readme",
  "keywords": [],
  "license": "MIT",
  "main": "bundles/in-memory-web-api.umd.js",
  "module": "index.js",
  "name": "angular-in-memory-web-api",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "@angular/http": "^2.0.0",
    "reflect-metadata": "~0.1.8",
    "rxjs": "5.0.1",
    "zone.js": "^0.7.4"
  },
  "readme": "# Angular in-memory-web-api\r\n[![Build Status][travis-badge]][travis-badge-url]\r\n\r\nAn in-memory web api for Angular demos and tests.\r\n\r\nIt intercepts Angular `Http` requests that would otherwise go to the remote server\r\nvia the Angular `XHRBackend` service\r\n\r\n>**LIMITATIONS**\r\n>\r\n>The _in-memory-web-api_ exists primarily to support the \r\n[Angular documentation](https://angular.io/docs/ts/latest/ \"Angular documentation web site\").\r\nIt is not supposed to emulate every possible real world web API and is not intended for production use.\r\n>\r\n>Most importantly, it is ***always experimental***. \r\nWe will make breaking changes and we won't feel bad about it \r\nbecause this is a development tool, not a production product. \r\nWe do try to tell you about such changes in the `CHANGELOG.md`\r\nand we fix bugs as fast as we can.\r\n\r\n\r\n>**UPDATE NOTICE**\r\n>\r\n>As of v.0.1.0, the npm package was renamed from `angular2-in-memory-web-api` to its current name,\r\n`angular-in-memory-web-api`. All versions ***after 0.0.21*** are shipped under this name.\r\n**Be sure to update your `package.json` and import statements**.\r\n\r\n## HTTP request handling\r\nThis in-memory web api service processes an HTTP request and \r\nreturns an `Observable` of HTTP `Response` object\r\nin the manner of a RESTy web api.\r\nIt natively handles URI patterns in the form `:base/:collectionName/:id?`\r\n\r\nExamples:\r\n```\r\n  // for requests to an `api` base URL that gets heroes from a 'heroes' collection \r\n  GET api/heroes          // all heroes\r\n  GET api/heroes/42       // the character with id=42\r\n  GET api/heroes?name=^j  // 'j' is a regex; returns heroes whose name starting with 'j' or 'J'\r\n  GET api/heroes.json/42  // ignores the \".json\"\r\n```\r\n<a id=\"commands\"></a>\r\n## Commands\r\n\r\nThe service also accepts \"commands\" that can, for example, reconfigure the service and reset the database.\r\n\r\nWhen the last segment of the _api base path_ is \"commands\", the `collectionName` is treated as the _command_.\r\nExample URLs:\r\n```\r\n  commands/resetdb   // Reset the \"database\" to its original state\r\n  commands/config    // Get or update this service's config object\r\n```\r\n\r\nCommands are \"hot\", meaning they are always executed immediately\r\nwhether or not someone subscribes to the returned observable.\r\n\r\nUsage:\r\n```\r\n  http.post('commands/resetdb', undefined);\r\n  http.get('commands/config');\r\n  http.post('commands/config', '{\"delay\":1000}');\r\n```\r\n\r\n## Basic usage\r\nCreate an `InMemoryDataService` class that implements `InMemoryDataService`.\r\n\r\nAt minimum it must implement `createDb` which \r\ncreates a \"database\" hash whose keys are collection names\r\nand whose values are arrays of collection objects to return or update.\r\nFor example:\r\n```ts\r\nimport { InMemoryDbService } from 'angular-in-memory-web-api';\r\n\r\nexport class InMemHeroService implements InMemoryDbService {\r\n  createDb() {\r\n    let heroes = [\r\n      { id: '1', name: 'Windstorm' },\r\n      { id: '2', name: 'Bombasto' },\r\n      { id: '3', name: 'Magneta' },\r\n      { id: '4', name: 'Tornado' }\r\n    ];\r\n    return {heroes};\r\n  }\r\n}\r\n```\r\n\r\nRegister this module and your service implementation in `AppModule.imports`\r\ncalling the `forRoot` static method with this service class and optional configuration object:\r\n```ts\r\n// other imports\r\nimport { HttpModule }           from '@angular/http';\r\nimport { InMemoryWebApiModule } from 'angular-in-memory-web-api';\r\n\r\nimport { InMemHeroService }     from '../app/hero-data';\r\n@NgModule({\r\n imports: [\r\n   HttpModule,\r\n   InMemoryWebApiModule.forRoot(InMemHeroService),\r\n   ...\r\n ],\r\n ...\r\n})\r\nexport class AppModule { ... }\r\n```\r\n\r\nSee examples in the Angular.io such as the\r\n[Server Communication](https://angular.io/docs/ts/latest/guide/server-communication.html) and\r\n[Tour of Heroes](https://angular.io/docs/ts/latest/tutorial/toh-pt6.html) chapters.\r\n\r\n>Always import the `InMemoryWebApiModule` _after_ the `HttpModule` to ensure that \r\nthe `XHRBackend` provider of the `InMemoryWebApiModule` supersedes all others.\r\n\r\n# Bonus Features\r\nSome features are not readily apparent in the basic usage example.\r\n\r\nThe `InMemoryBackendConfigArgs` defines a set of options. Add them as the second `forRoot` argument:\r\n```ts\r\n  InMemoryWebApiModule.forRoot(InMemHeroService, { delay: 500 }),\r\n```\r\n\r\n**Read the `InMemoryBackendConfigArgs` interface to learn about these options**.\r\n\r\n\r\n## Request evaluation order\r\nThis service can evaluate requests in multiple ways depending upon the configuration.\r\nHere's how it reasons:\r\n1. If it looks like a [command](#commands), process as a command\r\n2. If the [HTTP method is overridden](#method-override) \r\n3. If the resource name (after the api base path) matches one of the configured collections, process that\r\n4. If not but the `Config.passThruUnknownUrl` flag is `true`, try to [pass the request along to a real _XHRBackend_](#passthru).\r\n5. Return a 404.\r\n\r\nSee the `handleRequest` method implementation for details.\r\n\r\n## Default delayed response\r\n\r\nBy default this service adds a 500ms delay (see `InMemoryBackendConfig.delay`) \r\nto all requests to simulate round-trip latency.\r\nYou can eliminate that or extend it by setting a different value:\r\n```ts\r\n  InMemoryWebApiModule.forRoot(InMemHeroService, { delay: 0 }),    // no delay\r\n  InMemoryWebApiModule.forRoot(InMemHeroService, { delay: 1500 }), // 1.5 second delay\r\n```\r\n\r\n## Simple query strings\r\nPass custom filters as a regex pattern via query string. \r\nThe query string defines which property and value to match.\r\n\r\nFormat: `/app/heroes/?propertyName=regexPattern`\r\n\r\nThe following example matches all names start with the letter 'j'  or 'J' in the heroes collection.\r\n\r\n`/app/heroes/?name=^j`\r\n\r\n>Search pattern matches are case insensitive by default. \r\nSet `config.caseSensitiveSearch = true` if needed.\r\n\r\n<a id=\"passthru\"></a>\r\n## Pass thru to a live _XHRBackend_\r\n\r\nIf an existing, running remote server should handle requests for collections \r\nthat are not in the in-memory database, set `Config.passThruUnknownUrl: true`.\r\nThis service will forward unrecognized requests via a base version of the Angular `XHRBackend`.\r\n\r\n## _parseUrl_ and your override\r\n\r\nThe `parseUrl` parses the request URL into a `ParsedUrl` object.\r\n`ParsedUrl` is a public interface whose properties guide the in-memory web api\r\nas it processes the request.\r\n\r\n### Default _parseUrl_\r\n\r\nDefault parsing depends upon certain values of `config`: `apiBase`, `host`, and `urlRoot`.\r\nRead the source code for the complete story.\r\n\r\nConfiguring the `apiBase` yields the most interesting changes to `parseUrl` behavior:\r\n\r\n* For `apiBase=undefined` and `url='http://localhost/api/customers/42'`\r\n    ```\r\n    {base: 'api/', collectionName: 'customers', id: '42', ...}\r\n    ```\r\n\r\n*  For `apiBase='some/api/root/'` and `url='http://localhost/some/api/root/customers'`\r\n    ```\r\n    {base: 'some/api/root/', collectionName: 'customers', id: undefined, ...}\r\n    ```\r\n\r\n*  For `apiBase='/'` and `url='http://localhost/customers'`\r\n    ```\r\n    {base: '/', collectionName: 'customers', id: undefined, ...}\r\n    ```\r\n\r\n**The actual api base segment values are ignored**. Only the number of segments matters.\r\nThe following api base strings are considered identical: 'a/b' ~ 'some/api/' ~ `two/segments'\r\n\r\nThis means that URLs that work with the in-memory web api may be rejected by the real server.\r\n\r\n### Custom _parseUrl_\r\n\r\nYou can override the default by implementing a `parseUrl` method in your `InMemoryDbService`.\r\nSuch a method must take the incoming request URL string and return a `ParsedUrl` object. \r\n\r\nAssign your alternative to `InMemDbService['parseUrl']`\r\n\r\n## _responseInterceptor_\r\n\r\nYou can morph the response returned by the default HTTP methods, called by `collectionHandler`, \r\nto suit your needs by adding a `responseInterceptor` method to your `InMemoryDbService` class. \r\nThe `collectionHandler` calls your interceptor like this:\r\n```ts\r\nresponseOptions = this.responseInterceptor(responseOptions, requestInfo);\r\n```\r\n\r\n<a id=\"method-override\"></a>\r\n## HTTP method interceptors\r\n\r\nIf you make requests this service can't handle but still want an in-memory database to hold values,\r\noverride the way this service handles any HTTP method by implementing a method in\r\nyour `InMemoryDbService` that does the job.\r\n\r\nThe `InMemoryDbService` method name must be the same as the HTTP method name but **all lowercase**.\r\nThis service calls it with an `HttpMethodInterceptorArgs` object.\r\nFor example, your HTTP GET interceptor would be called like this:\r\ne.g., `yourInMemDbService[\"get\"](interceptorArgs)`.\r\nYour method must **return an `Observable<Response>`** which _should be \"cold\"_.\r\n\r\nThe `HttpMethodInterceptorArgs` (as of this writing) are:\r\n```ts\r\nrequestInfo: RequestInfo;           // parsed request\r\ndb: Object;                         // the current in-mem database collections\r\nconfig: InMemoryBackendConfigArgs;  // the current config\r\npassThruBackend: ConnectionBackend; // pass through backend, if it exists\r\n```\r\n## Examples\r\n\r\nThe file `examples/hero-data.service.ts` is an example of a Hero-oriented `InMemoryDbService`,\r\nderived from the [HTTP Client](https://angular.io/docs/ts/latest/guide/server-communication.html) \r\nsample in the Angular documentation.\r\n\r\nTo try it, add the following line to `AppModule.imports`\r\n```ts\r\nInMemoryWebApiModule.forRoot(HeroDataService)\r\n```\r\n  \r\nThat file also has a `HeroDataOverrideService` derived class that demonstrates overriding\r\nthe `parseUrl` method and it has a \"cold\" HTTP GET interceptor.\r\n\r\nAdd the following line to `AppModule.imports` to see this version of the data service in action:\r\n```ts\r\nInMemoryWebApiModule.forRoot(HeroDataOverrideService)\r\n```\r\n\r\n# To Do\r\n* add tests (shameful omission!)\r\n\r\n# Build Instructions\r\n\r\nMostly gulp driven.\r\n\r\nThe following describes steps for updating from one Angular version to the next\r\n\r\n>This is essential even when there are no changes of real consequence.\r\nNeglecting to synchronize Angular 2 versions\r\ntriggers typescript definition duplication error messages when\r\ncompiling your application project.\r\n\r\n- `gulp bump` - up the package version number\r\n\r\n- update `CHANGELOG.MD` to record the change\r\n\r\n- update the dependent version(s) in `package.json`\r\n\r\n- `npm install` the new package(s) (make sure they really do install!)<br>\r\n   `npm list --depth=0`\r\n\r\n- consider updating typings, install individually/several:\r\n```\r\n  npm install @types/jasmine @types/node --save-dev\r\n```\r\n\r\n- `gulp clean` - clear out all generated `text`\r\n\r\n- `npm run tsc` to confirm the project compiles w/o error (sanity check)\r\n\r\n -- NO TESTS YET ... BAD --\r\n\r\n- `gulp build`\r\n- commit and push\r\n\r\n- `npm publish`\r\n\r\n- Fix and validate angular.io docs samples\r\n\r\n- Add two tags to the release commit with for unpkg\r\n  - the version number\r\n  - 'latest'\r\n\r\n[travis-badge]: https://travis-ci.org/angular/in-memory-web-api.svg?branch=master\r\n[travis-badge-url]: https://travis-ci.org/angular/in-memory-web-api\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/angular/in-memory-web-api.git"
  },
  "scripts": {
    "build-and-test": "concurrently  \"npm run tsc\" \"npm run test\"",
    "http-server": "tsc && http-server",
    "lint": "tslint ./src/*.ts -t verbose -e ./src/*.d.ts",
    "lite": "lite-server",
    "live": "live-server",
    "ngc": "ngc",
    "start": "concurrently \"npm run tsc:w\" \"npm run lite\" ",
    "test": "karma start karma.conf.js",
    "tsc": "tsc",
    "tsc:w": "tsc -w"
  },
  "version": "0.2.2"
}
